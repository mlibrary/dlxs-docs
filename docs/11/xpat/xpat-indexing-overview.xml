<?xml version="1.0"?>

<!-- SPO Editorial Services                  -->
<!-- automatically-generated XML header file -->

<?xml-stylesheet href="../../pre11-dlxsdocs.xsl" type="text/xsl"?>
<!DOCTYPE DLPSDOC PUBLIC "-//UM-DLPS//DTD DLPS Publications//EN" "http://docs.umdl.umich.edu/dlps/docs/dlpsdocs.dtd">
<DLPSDOC>
<TITLE>XPAT Index Building, Overview</TITLE>
<HEADER>
<JOURNAL>DLXS Documentation</JOURNAL>
<PUBDATE>2002-05-08 16:04:50 EDT</PUBDATE>
<AUTH1>Wilkin, John Price</AUTH1>
<AUTH2></AUTH2>
<DOCTITLE>XPAT Index Building, Overview</DOCTITLE>
<VOL>xpat</VOL>
<ISS></ISS>
<FILE>dlxsdocs-xpat-indexing-overview</FILE>
</HEADER>

<BODY>
<BHEAD>XPAT Index Building, Overview</BHEAD>

<DIV1 ID="div1.3.1"><H1>3.1	Overview</H1>
<P>Index building is an intrinsic part of setting up an XPAT database. Indices
provide a means by which text can be searched for rapidly.  Index building is
actually composed of a sequence of individual index-building steps, each
performed by specialized utilities. Each of these utilities has its own command
line requirements. Each utility has default characteristics that can be
customized or optimized by the use of command-line parameters. These parameters
can be adjusted in order to exert greater control over, and to improve, the
index-building process.</P>
<P>Before discussing the actual details of the index-building process (see
Chapter 3, Detailed Index Building), we first review the functionality of the
individual utilities that comprise a complete set of indices. The actual
sequence of utilities used depends greatly on the type of database in use. 
Later, Chapter 3, Detailed Index Building, provides full details for each of the
individual index-building utilities.</P>
</DIV1>
<DIV1 ID="div1.3.2"><H1>3.2	Components of the Index-building Process</H1>
<P>The index building process consists of two primary and required parts.  The
first of these is a string index, generated by xpatbld.  When using MFS
databases, other XPAT utilities help to prepare the data so that xpatbld can
build a string index; these additional steps are not required in consolidated
databases.  The xpatbld string index is used to find occurrces of words,
phrases, and ranges of values.  The second component part of an index building
process is the region index.  The concept of region indexes is covered in
Chapter 2, section 2, XPAT Regions.  Briefly, region indexes make it possible to
find information in within specified (and demarcated) segments of the text, and
even segments nested within each other.  These two indices--the string
index and the region index--work together to provide users and system
builders with the ability to find information in document collections using
XPAT.  The following table provides a brief inventory of the utilities used,
their relevance to a consolidated index build, an MFS index build, or both, and
the files read, modified, and created.</P>
<TABLE BORDER="1"><TBODY>
<TR><TD><B>Index builder</B></TD><TD><B>Function</B></TD><TD><B>MFS or Consol-idated</B></TD><TD><B>Files read</B></TD><TD><B>Files modified</B></TD><TD><B>Files created</B></TD></TR>
<TR><TD>mfsbld</TD><TD><B>Builds the FileMap for an MFS database.</B> This utility reads in the
FiltcrChain segments defined in the DD ("patents.dd") and creates a
list of all the files that those segments represent. It then creates one entry
in the FileMap file for each file in the list. Additional information (date,
time, etc.) about each file is added to the file.</TD><TD>MFS</TD><TD>DAT, DD</TD><TD>  </TD><TD>FMP, VIR</TD></TR>
<TR><TD>mfsmeta</TD><TD><B>Produces a metadata structure file</B></TD><TD>MFS</TD><TD>DD, FMP</TD><TD>
  </TD><TD>STR</TD></TR>
<TR><TD>multirgn</TD><TD><B>Produces Region Sub-Indices for the metadata regions</B> created in the
FileMap by the <B>mfsbld</B> utility.</TD><TD>Both</TD><TD>DD, TAG</TD><TD>DD</TD><TD>RGN</TD></TR>
<TR><TD>sgmlrgn/xmlrgn</TD><TD><B>Builds SGML or XML region indices</B> based on the structure indicated
in the Data Type Definition (e.g., textclass.dtd) file.</TD><TD>Both</TD><TD>DD, INP, SOC (xml only), DTD, RGN</TD><TD>DD, RGN</TD><TD>  </TD></TR>
<TR><TD>  </TD><TD><B>Produces the Main Index</B> by using information in the DD to determine
indexing parameters (character mappings, index point specifications, stopwords).
Command line options play an important role, especially the memory option,
"-m". See below for a discussion of memory allocation and consult
Chapter 3, Detailed Index Building, for full details on the "-m"
option.</TD><TD>Both</TD><TD>DD, FMP</TD><TD>DD</TD><TD>IDX</TD></TR>
<TR><TD>patffw, patffi</TD><TD><B>Produce the Fast Find Word List and the Fast Find Indices</B>,
respectively. These two utilities must be used in sequence for the Fast Find
indices to be built properly.</TD><TD>  </TD><TD>  </TD><TD>DD</TD><TD>FF</TD></TR>
</TBODY></TABLE>
</DIV1>
<DIV1 ID="div1.3.3"><H1>3.3	Memory Allocation for Index Building</H1>
<P>Memory allocation is an important part of the index-building process. It is
not required; however, its proper use will increase the speed with which the
indices are built. There are two simple rules for deciding how much memory to
allocate:</P>
<OL>
<LI>Allocate as much physical RAM as possible</LI>
<LI>Do not allocate more RAM than you have available.</LI></OL>
<P>The second
rule sounds rather ridiculous; however attempting to allocate more RAM than
available will cause the system to "thrash." Your machine will be so
busy trying to allocate physical memory via virtual memory that it will not be
able to begin building the indices. For example, you may have 200Mb of data and
256Mb of RAM. The operating system takes up, say, 6Mb of RAM, leaving 250Mb for
index building. If you allocate the default, which is 512Kb, the index-building
process will take far longer than if you allocate, say 50Mb, or even 100Mb. In
this case, you can allocate up to 250Mb. However, if you allocate 300Mb, you
have exceeded the available RAM. This will cause your machine to swap physical
and virtual memory back and forth, and thus it will not get around to building
the indices. Consult your system administrator for information on the amount of
physical RAM your machine has available.</P>
</DIV1>
<DIV1 ID="div1.3.4"><H1>3.4	Summary</H1>
<P>The type of database in use determines the sequence of individual index
builds. Different index-building utilities with different user-selected
parameters control the indexing process. Further details of each index-building
utility are available in Chapter 3, Detailed Index Building.</P>
</DIV1>
<DIV1 ID="div1.3.5"><H1>3.5	Miscellaneous</H1>
<P>The table below shows a list of the files that may be either read, created,
or modified by an individual index-builder utility. In addition to the filename
suffix, there is also a short form notation column. These short form notations
are used in various chapters in the XPAT documentation.</P>

<TABLE BORDER="1"><TBODY>
<TR><TD><B>File or Suffix</B></TD><TD><B>Notation</B></TD><TD><B>Description</B></TD></TR>
<TR><TD>Various</TD><TD>DAT</TD><TD>Source data files of any type</TD></TR>
<TR><TD>".dd"</TD><TD>DD</TD><TD>Data Dictionary (main control file)</TD></TR>
<TR><TD>".dtd"</TD><TD>DTD</TD><TD>Data Type Definition (SGML or XML element hierarchy)</TD></TR>
<TR><TD>".ff?"</TD><TD>FF</TD><TD>Fast Find Word List and Fast Find Indices</TD></TR>
<TR><TD>".fmp"</TD><TD>FMP</TD><TD>File Map Files</TD></TR>
<TR><TD>".idx"</TD><TD>IDX</TD><TD>Main Index File</TD></TR>
<TR><TD>".inp"</TD><TD>INP</TD><TD>Data Type Declaration File (SGML or XML)</TD></TR>
<TR><TD>".log"</TD><TD>LOG</TD><TD>Message Log File</TD></TR>
<TR><TD>".rgn"</TD><TD>RGN</TD><TD>Region Sub-Indices File</TD></TR>
<TR><TD>".tag"</TD><TD>TAG</TD><TD>Region tags file</TD></TR>
<TR><TD>"tempfile.mfs"</TD><TD>VIR</TD><TD>Virtual data file consolidated from source data</TD></TR>
</TBODY></TABLE>
</DIV1>
</BODY>
</DLPSDOC>
